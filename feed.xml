<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>诗意栖居</title>
    <atom:link href="http://cn.yuz.me/feed.xml" rel="self" type="application/rss+xml"></atom:link>
    <link>http://cn.yuz.me</link>
    <description>Living the artistic way</description>
    <pubDate>Fri, 21 Mar 2014 01:00:00 +0100</pubDate>
    <generator>Wintersmith - https://github.com/jnordberg/wintersmith</generator>
    <language>en</language>
    <item>
      <title>Friday</title>
      <link>http://cn.yuz.me/articles/21-March-2014/</link>
      <pubDate>Fri, 21 Mar 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/21-March-2014/</guid>
      <author></author>
      <description>&lt;p&gt;真正的成熟，是有规律的生活。规律生活的背后，是自我的约束。自我约束的背后，是责任。人应当像大自然一样，每天按时去生活，去工作。这就是修身的一种方式，只有修好自身，才能齐家，治国，平天下。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Thursday</title>
      <link>http://cn.yuz.me/articles/20-March-2014/</link>
      <pubDate>Thu, 20 Mar 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/20-March-2014/</guid>
      <author></author>
      <description>&lt;p&gt;今天是我们专业工程管理毕业的日子，今天有 7 个中国人毕业，张CX、李ZJ、井X、余Y、侯WY、葛JH和王C。中午我坐在余Y男朋友的车里到了华侨饭店，吃了很多。晚上和几个朋友在家里吃了女朋友做的梅菜扣肉。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cn.yuz.me/articles/20-March-2014/dinner.png&quot; alt=&quot;扣肉图片&quot;&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Wednesday</title>
      <link>http://cn.yuz.me/articles/19-March-2014/</link>
      <pubDate>Wed, 19 Mar 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/19-March-2014/</guid>
      <author></author>
      <description>&lt;p&gt;这是 Javascript 系列文章的第五篇，已经连续写了五天，Javascript 学习笔记暂时告一段落。今天讲讲怎样用 Javascript 来做比较。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;程序里面经常会涉及到两个值的比较，Javascript 默认按照字母顺序进行比较，即使输入的是数字，Javascript 也会先自动把它们转化成为字符，然后进行比较。所以，当比较的对象不是字符时，会出现意想不到的结果。比如：2 与 10 比较，结果是 10 小于 2，因为 10 的第一个字符 1 小于 2。&lt;/p&gt;
&lt;p&gt;为了解决这个问题，Javascript 提供了一个方法 &lt;code&gt;sort()&lt;/code&gt;，它让程序员来定义比较大小的方式。经过比较之后，传递一个值给 &lt;code&gt;sort()&lt;/code&gt;，这个值可以是正、负或者零。&lt;/p&gt;
&lt;p&gt;比较两个数 a 和 b 的方法非常简单：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function cmp(a,b) {
    return a - b;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;将这个方法作为 &lt;code&gt;sort(cmp)&lt;/code&gt; 的参数：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果 a 小于 b，返回值为负值，那么 &lt;code&gt;sort(cmp)&lt;/code&gt; 方法会把 a 排在 b 的前面。&lt;/li&gt;
&lt;li&gt;如果 b 小于 a，返回值为正值，那么 &lt;code&gt;sort(cmp)&lt;/code&gt; 方法会把 b 排在 a 的前面。&lt;/li&gt;
&lt;li&gt;如果 a 等于 b，返回值为零，那么 &lt;code&gt;sort(cmp)&lt;/code&gt; 会认为两个值相等。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面是一个具体的例子：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;列表自动排序&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;h1&amp;gt;列表自动排序&amp;lt;/h1&amp;gt;
    &amp;lt;p&amp;gt;输入数字，点击确定，浏览器会将输入过的数字进行 &amp;lt;i&amp;gt;从小到大&amp;lt;/i&amp;gt; 排序。&amp;lt;/p&amp;gt;
    &amp;lt;form&amp;gt;
        请输入一个整数：&amp;lt;input type=&amp;quot;text&amp;quot; id=&amp;quot;input&amp;quot; /&amp;gt;
        &amp;lt;input type=&amp;quot;button&amp;quot; id=&amp;quot;submit&amp;quot; value=&amp;quot;确定&amp;quot;&amp;gt;
    &amp;lt;/form&amp;gt;
    &amp;lt;p&amp;gt;输出：&amp;lt;/p&amp;gt;
    &amp;lt;p id=&amp;quot;output&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;

    &amp;lt;script type=&amp;quot;text/javascript&amp;quot; &amp;gt;
        var theList = new Array()

        function compare(buttonId, input, output) {
            var btn = document.getElementById(buttonId)
            btn.onclick = function() {
                var inputNumber = document.getElementById(&amp;quot;input&amp;quot;).value
                theList.push(parseInt(inputNumber))

                if (1 &amp;lt; theList.length) {
                    theList = theList.sort(function(a,b) {
                        return a - b;
                    })
                }

                document.getElementById(output).innerHTML = theList
            }
        }

        var m = new compare(&amp;#39;submit&amp;#39;, &amp;#39;input&amp;#39;, &amp;#39;output&amp;#39;)
    &amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Tuesday</title>
      <link>http://cn.yuz.me/articles/18-March-2014/</link>
      <pubDate>Tue, 18 Mar 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/18-March-2014/</guid>
      <author></author>
      <description>&lt;p&gt;这是 Javascript 系列文章的第四篇。为了加深我对于闭包的理解，我仔细研究了&lt;a href=&quot;http://www.ruanyifeng.com/blog/2009/08/learning_javascript_closures.html&quot;&gt;阮一峰的一篇博客&lt;/a&gt;，最后的思考题却使我对闭包更加疑惑了，下面是我对闭包的一些思考。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;首先摘录两则使用闭包的注意事项：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;由于闭包会使得函数中的变量都被保存在内存中，内存消耗很大，所以不能滥用闭包，否则会造成网页的性能问题，在IE中可能导致内存泄露。解决方法是，在退出函数之前，将不使用的局部变量全部删除。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;闭包会在父函数外部，改变父函数内部变量的值。所以，如果你把父函数当作对象（object）使用，把闭包当作它的公用方法（Public Method），把内部变量当作它的私有属性（private value），这时一定要小心，不要随便改变父函数内部变量的值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面两个函数显示了 Javascript 的一个“特性”，我认为这个“特性”并不好：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// 程序一
function f()
{
    var n=999;
}
f();
alert(n); // error

// 程序二
function f()
{
    n=999;
}
f();
alert(n); // 999
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;仅仅由于给 &lt;code&gt;n&lt;/code&gt; 赋值的时候前面没有加上 &lt;code&gt;var&lt;/code&gt;，第二个程序的变量 &lt;code&gt;n&lt;/code&gt; 就变成了全局变量，而第一个程序的 &lt;code&gt;n&lt;/code&gt; 却是 &lt;code&gt;f()&lt;/code&gt; 的局部变量。为了防止出错，最好&lt;strong&gt;每次&lt;/strong&gt;都在变量赋值语句前面加上 &lt;code&gt;var&lt;/code&gt;！&lt;/p&gt;
&lt;p&gt;下面摘录一则我认为很重要的博客评论，这个问题我一直没有想过，先看两段程序：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function f1()
{
    var n=999;

    function f2()
    {
        alert(n);
    }
    return f2;
}

var result=f1();
result(); // 999
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;为什么不写成这样？&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function f1()
{
    var n=999;
    return n;
}

var result=f1();
alert(result);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;原因是这样的：第一个函数返回的是闭包，但是由于该闭包需要 &lt;code&gt;f1()&lt;/code&gt; 的作用域，所以，变量 &lt;code&gt;n&lt;/code&gt; 的内存区域&lt;strong&gt;一直保留到 &lt;code&gt;result&lt;/code&gt; 被删除为止&lt;/strong&gt;。第二个函数，调用 &lt;code&gt;f1()&lt;/code&gt; 的时候，会新建内存区域来储存变量 &lt;code&gt;result&lt;/code&gt; 的值，同时变量 &lt;code&gt;n&lt;/code&gt; 的内存区域&lt;strong&gt;在函数执行完后即被释放&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;下面是让我非常困惑的一道思考题：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// 程序一
var name = &amp;quot;The Window&amp;quot;;
var object = {
    name : &amp;quot;My Object&amp;quot;,
    getNameFunc : function() {
        return function(){
            return this.name;
        };
    }
};

var x = object.getNameFunc();
alert(x()); // 输出为：“The Window”

// 程序二
var name = &amp;quot;The Window&amp;quot;;
var object = {
    name : &amp;quot;My Object&amp;quot;,
    getNameFunc : function() {
        var that = this;
        return function() {
            return that.name;
        };
    }
};

var x = object.getNameFunc();
alert(x()); // 输出为：“My Object”
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使我困惑的主要是 &lt;code&gt;this&lt;/code&gt; 到底指向了哪里？经过我反复的思考，大概明白了其中的奥秘：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;两段程序，返回的都是闭包函数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第一段程序，返回值是这样的：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; function() {
     return this.name;
 }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;抛开大环境（即函数是写在 &lt;code&gt;object&lt;/code&gt; 里面的）不谈，单纯从字面上来看，&lt;code&gt;this&lt;/code&gt; 应该指向的是&lt;strong&gt;被赋予了这个函数&lt;/strong&gt;的变量的环境，那么在第一段程序里 &lt;code&gt;this&lt;/code&gt; 应当指向全局，下面的两段程序本质上是一样的：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; var x = object.getNameFunc();
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt; var x = function() {
     return this.name;
 } // x 是全局变量
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;所以输出为：“The Window”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第二段程序与第一段程序原理相同，唯一不同的是：由于闭包的特性，&lt;code&gt;var that = this;&lt;/code&gt;  这句话使得 &lt;code&gt;that&lt;/code&gt; 指向了 &lt;code&gt;object&lt;/code&gt; 对象，而且会随着变量 &lt;code&gt;x&lt;/code&gt; 的存在而一直存在。所以，输出为：“My Object”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;从这个例子可以看到，&lt;code&gt;object&lt;/code&gt; 里面定义的 &lt;code&gt;getNameFunc&lt;/code&gt; 的第一层函数中，如果使用 &lt;code&gt;this&lt;/code&gt;，那么所指向的环境是 &lt;code&gt;object&lt;/code&gt; 对象。而第二层以后，&lt;code&gt;this&lt;/code&gt; 的指向便不再确定，随新的变量的不同而不同。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用 &lt;code&gt;apply()&lt;/code&gt; 方法，人为确定 &lt;code&gt;this&lt;/code&gt; 的指向，可以使第一段程序输出与第二段程序相同的结果：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; var name = &amp;quot;The Window&amp;quot;;
 var object = {
     name : &amp;quot;My Object&amp;quot;,
     getNameFunc : function() {
         return function(){
             return this.name;
         };
     }
 };
 var x = object.getNameFunc();
 alert(x.apply(object)); // 输出为：“My Object”
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    <item>
      <title>Monday</title>
      <link>http://cn.yuz.me/articles/17-March-2014/</link>
      <pubDate>Mon, 17 Mar 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/17-March-2014/</guid>
      <author></author>
      <description>&lt;p&gt;这是 Javascript 系列文章的第三篇。今天要讨论的是 Javascript 里的 Scope 和 Closures。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Scope 是变量的使用范围，即作用域。本地变量可以覆盖掉全局变量，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; var x = 10;
 function f()
 {    
     {
         var x = 20; // No block scope in ECMAScript, this x is available everywhere inside f()   
     }

     alert(x);
 }
 f();       // 显示 20
 alert(x);  // 显示 10
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;但是函数外部无法读取函数内的局部变量&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; function f()
 {
     var n=999;
 }

 alert(n); // error
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;我们通过返回值的形式读取函数内部的变量：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; function f1()
 {
     var n=999;

     function f2()
     {
         alert(n);
     }

     return f2;
 }

 var result=f1();
 result(); // 999
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下面这个图片显示了变量不同的作用域：
&lt;img src=&quot;http://cn.yuz.me/articles/17-March-2014/scope.png&quot; alt=&quot;Variable&amp;#39;s scope&quot;&gt;
x、y、z 是三个变量，红色方框显示了它们的作用域，蓝色箭头表示作用域链。&lt;code&gt;alert(x+y+z)&lt;/code&gt; 函数首先在作用域 g 里面寻找变量的值，只找到了 z，之后再到作用域 f 里面查找变量的值，找到了 y，以此类推，直到全部找到为止，这就是作用域链。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Closure 中文叫做闭包。Closure 的英文解释是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A closure is a function or reference to a function together with a referencing environment。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;中文解释是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;闭包是引用了自由变量的函数。有另一种说法认为闭包是由函数和与其相关的引用环境组合而成的实体。闭包在运行时可以有多个实例，不同的引用环境和相同的函数组合可以产生不同的实例。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下面的程序的程序中，&lt;code&gt;doAlert()&lt;/code&gt; 就是闭包，它引用了自由变量 &lt;code&gt;y&lt;/code&gt;：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; var x = 5;
 var y = 20;

 function makePrintIt(y)
 {
     return function doAlert()
     {
         alert(x+y)
     }       
 }

 var f1 = makePrintIt(5);
 var f2 = makePrintIt(10);

 f1();
 f2();
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;虽然 &lt;code&gt;f1&lt;/code&gt; 和 &lt;code&gt;f2&lt;/code&gt; 都是 &lt;code&gt;doAlert()&lt;/code&gt; 对象，但是自由变量 &lt;code&gt;y&lt;/code&gt; 的值随构造函数创建的&lt;strong&gt;实例不同&lt;/strong&gt;而不同。最后结果是 &lt;code&gt;f1()&lt;/code&gt; 输出 10，而 &lt;code&gt;f2()&lt;/code&gt; 输出 15。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    <item>
      <title>Sunday</title>
      <link>http://cn.yuz.me/articles/16-March-2014/</link>
      <pubDate>Sun, 16 Mar 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/16-March-2014/</guid>
      <author></author>
      <description>&lt;p&gt;这是 Javascript 系列文章的第二篇。今天的任务是把昨天结尾部分的计算平方的小程序嵌入到网页里面。这里需要用到一个转换函数。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;先看一个程序：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;input type=&amp;quot;button&amp;quot; id=&amp;quot;submitButton&amp;quot; value=&amp;quot;Press Me!&amp;quot; /&amp;gt;

&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;

    function MagicButtonManager(buttonId, message)
    {
        this._message = message;
        var btn = document.getElementById(buttonId);
        btn.onclick = this.showMessage;
    }

    MagicButtonManager.prototype.showMessage = function()
    {
        alert(this._message);
    }

    var m = new MagicButtonManager(&amp;#39;submitButton&amp;#39;, &amp;#39;Hello World!&amp;#39;);

&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;解释一下，&lt;code&gt;MagicButtonManager()&lt;/code&gt; 是构造函数，接收参数 &lt;code&gt;message&lt;/code&gt; 和 &lt;code&gt;buttonId&lt;/code&gt;，当按钮按下，弹出显示框显示：Hello World!&lt;/p&gt;
&lt;p&gt;但是执行上面的程序显示框却显示：&lt;strong&gt;undefined&lt;/strong&gt;。问题出在 &lt;code&gt;btn.onclick = this.showMessage;&lt;/code&gt; 这句话上。如果这样写，那么&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;MagicButtonManager.prototype.showMessage = function()
{
    alert(this._message);
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;里面的 &lt;code&gt;this&lt;/code&gt; 指向 &lt;code&gt;submitButton&lt;/code&gt; 而不是 &lt;code&gt;MagicButtonManager&lt;/code&gt;，所以 &lt;code&gt;this._message&lt;/code&gt; 是 undefined，没有定义。我们需要做的，是让按钮通过对象调用 &lt;code&gt;showMessage()&lt;/code&gt; 方法，让 &lt;code&gt;this&lt;/code&gt; 正确的指向 &lt;code&gt;MagicButtonManager&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;我们建立一个新的函数：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function Delegate(object, method)
{
    var shim = function()
                {
                    method.apply(object, arguments);
                }
    return shim;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这个函数返回一个属于 object 的方法，这个方法正是 &lt;code&gt;btn.onclick&lt;/code&gt; 需要的，然后将&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;btn.onclick = this.showMessage;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;改成&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;btn.onclick = Delegate(this, this.showMessage);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最终程序为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;input type=&amp;quot;button&amp;quot; id=&amp;quot;submitButton&amp;quot; value=&amp;quot;Press Me!&amp;quot; /&amp;gt;

&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;

    function MagicButtonManager(buttonId, message)
    {
        this._message = message;
        var btn = document.getElementById(buttonId);
        btn.onclick = Delegate(this, this.showMessage);
    }

    MagicButtonManager.prototype.showMessage = function()
    {
        alert(this._message);
    }

    function Delegate(object, method)
    {
        var shim = function()
                {
                    method.apply(object, arguments);
                }
        return shim;
    }

    var m = new MagicButtonManager(&amp;#39;submitButton&amp;#39;, &amp;#39;Hello World!&amp;#39;);

&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样就可以正确得到结果啦。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这就是 &lt;code&gt;apply()&lt;/code&gt; 方法的实用之处，可以纠正 &lt;code&gt;this&lt;/code&gt; 的不正确指向。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根据上面的经验，我把昨天的程序进行改写：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;h1&amp;gt;输出数字的平方&amp;lt;/h1&amp;gt;
    &amp;lt;form&amp;gt;
        请输入一个数字：&amp;lt;input type=&amp;quot;text&amp;quot; id=&amp;quot;input&amp;quot; /&amp;gt;
        &amp;lt;input type=&amp;quot;button&amp;quot; id=&amp;quot;submitButton&amp;quot; value=&amp;quot;Show result!&amp;quot; /&amp;gt;
    &amp;lt;/form&amp;gt;
    &amp;lt;p id=&amp;quot;result&amp;quot;&amp;gt;结果会显示在这里&amp;lt;/p&amp;gt;

    &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
        function TheButton (buttonId, InputValue, ResultValue)
        {
            this.InputValue = InputValue;
            this.ResultValue = ResultValue;
            var btn = document.getElementById(buttonId);
            btn.onclick = Delegate(this, this.showResult);
        }

        TheButton.prototype.showResult = function() {
            var num = document.getElementById(this.InputValue).value;
            num = num * num;
            var show = document.getElementById(this.ResultValue);
            show.innerHTML = num;
        }

        function Delegate(object, method)
        {
            var shim = function()
                {
                    method.apply(object, arguments);
                }
            return shim;
        }
        var m = new TheButton(&amp;#39;submitButton&amp;#39;, &amp;#39;input&amp;#39;, &amp;#39;result&amp;#39;);
    &amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;有兴趣的朋友可以复制上面的代码，保存为 &lt;code&gt;html&lt;/code&gt; 格式的文件，查看运行结果。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Saturday</title>
      <link>http://cn.yuz.me/articles/15-March-2014/</link>
      <pubDate>Sat, 15 Mar 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/15-March-2014/</guid>
      <author></author>
      <description>&lt;p&gt;今天是 Javascript 编程笔记系列的第一篇。今天介绍的是 &lt;code&gt;call()&lt;/code&gt; 和 &lt;code&gt;apply()&lt;/code&gt; 两个函数。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在 Javascript 里面，“函数”和“方法”两个概念有一点小区别：即当“函数”作为一个对象的元素出现时，它便叫做“方法”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 Javascript 里面，“函数”也何以被看成一个对象。那么，新建的“函数”也有它自己的“方法”，例如：&lt;code&gt;toString()&lt;/code&gt;，&lt;code&gt;call()&lt;/code&gt; 和 &lt;code&gt;apply()&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当你在最外层定义变量和函数时，变量和函数实际上同时是全局对象的元素。例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; var x = 10;

 function f() {
     alert(this.x);
 }

 f();
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;浏览器输出的结果是 10，这里的 this 指的是全局对象。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;call()&lt;/code&gt; 的作用是在“方法”执行时，指定它归属于哪个对象，即指明 &lt;code&gt;this&lt;/code&gt; 指向哪个对象：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; var o = { x: 15 };

 function f() {
     alert(this.x);
 }

 f.call(o);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输出结果是 15。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;call()&lt;/code&gt; 还可以接受参数：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; var o = { x: 15 };

 function f(message1, message2) {
     alert(message1 + this.x + message2);
 }

 f.call(o, &amp;quot;The value of x is &amp;quot;, &amp;quot;!&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;call()&lt;/code&gt; 和 &lt;code&gt;apply()&lt;/code&gt; 非常相似，区别仅仅是 &lt;code&gt;apply()&lt;/code&gt; 需要数组作为参数：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; var o = { x: 15 };

 function f(message1, message2) {
     alert(message1 + this.x + message2);
 }

 f.apply(o, [&amp;quot;The value of x is &amp;quot;, &amp;quot;!&amp;quot;]);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 Javascript 里面，每一个函数都可以接受一个可变的参数列表。如果一个函数只接受一个参数，而程序却传递了五个参数给它，这样并不会出错，但函数只处理第一个参数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果想让函数接受任意多的参数，可以用关键字 &lt;code&gt;arguments&lt;/code&gt;：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; function f(message) {
     for(var i = 1; i &amp;lt; arguments.length; i++) {
         message += arguments[i];
     }
     alert(message);
 }

 f(&amp;quot;H&amp;quot;, &amp;quot;e&amp;quot;, &amp;quot;l&amp;quot;, &amp;quot;l&amp;quot;, &amp;quot;o&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最后输出结果是：Hello。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;arguments&lt;/code&gt; 虽然表现得非常像数组，但它不是数组，因为它没有 &lt;code&gt;split&lt;/code&gt;、&lt;code&gt;push&lt;/code&gt;、或者 &lt;code&gt;pop&lt;/code&gt; 方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下面的程序，输出一个值的平方：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var o = { x: 15 };
function f(message1, message2)
{
    alert(message1 + (this.x * this.x) + message2);
}
function g(object, func)
{           
    // arguments[0] == object
    // arguments[1] == func
    var args = []; // empty array
    for(var i = 2; i &amp;lt; arguments.length; i++)
    {
        args.push(arguments[i]);
    }
    func.apply(object, args);
}
g(o, f, &amp;quot;The value of x squared = &amp;quot;, &amp;quot;. Wow!&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    <item>
      <title>Wednesday</title>
      <link>http://cn.yuz.me/articles/12-March-2014/</link>
      <pubDate>Wed, 12 Mar 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/12-March-2014/</guid>
      <author></author>
      <description>&lt;p&gt;路，要一步一步地走；饭，要一口一口地吃。自学对于我最大的挑战是：能够按部就班，稳扎稳打。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Tuesday</title>
      <link>http://cn.yuz.me/articles/11-March-2014/</link>
      <pubDate>Tue, 11 Mar 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/11-March-2014/</guid>
      <author></author>
      <description>&lt;p&gt;今天分享一篇文章，内容是关于如何学好意大利语的。最后附上我的一些读后感。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;-&quot;&gt;我的意大利语观&lt;/h3&gt;
&lt;p&gt;在此我只想浅谈一些个人的感慨，希望给正在学习意大利语的朋友们带来一些新的启发、新的突破： &lt;/p&gt;
&lt;p&gt;第一，学意大利语要有信心 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;意大利语其实并没有那么难，尤其对我们中国人来说。这是因为不管它的语法有多么繁琐、造句有多么复杂，这门古老的罗曼语一直都保持了它祖先拉丁语最重要的一个特征，那就是：&lt;strong&gt;几乎绝对的严格！&lt;/strong&gt;而这种严格对我们这些历经国内教育磨炼的中国人而言，恰恰是最拿手的看家本领。所以基本可以说，意大利语，只要真的想学好，是中国人都能学好！（当然，利用更科学的方式效果和效率还能更好、更高） &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;基于第一点，意大利语的语法是最严格的，所以掌握了最基本的规则 加上最基本的词汇量也就”基本“可以在意大利闯天下了。曾今有过一篇90年代的报告称之：&lt;strong&gt;意大利人的平均词汇量是400个单词左右！&lt;/strong&gt;400个！难道我们不应该比他们好吗？ &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;仍然基于第一点，意大利语的发音也是严格的，世界上没有几个像意大利语这么不随意的发音了，但同时也没有几个语言能像意大利语这样保持着读写的完美一致。（请不要和我抬杠，我十分清楚意大利语也有例外，但请承认，这些例外也只是绝对的少数。相比而言吃透世界商务语言，英文里的”U”字字母发音就能要出人命）！ &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第二，学意大利语也有窍门 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;意大利语的基础是语法，而这语法的大梁则是动词，所以说&lt;strong&gt;掌握动词就是掌握意大利语语法的关键&lt;/strong&gt;。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;但即便学动词，也不要盲目地去死记硬背整本《意大利语动词表》，99%以上的意大利人都背不出来。入门意大利语学者，背好 &lt;strong&gt;Indicativo&lt;/strong&gt; 里的 &lt;strong&gt;imperfetto&lt;/strong&gt;、&lt;strong&gt;presente&lt;/strong&gt;、&lt;strong&gt;futuro&lt;/strong&gt;、再加上&lt;strong&gt;过去分词&lt;/strong&gt;、&lt;strong&gt;gerundio&lt;/strong&gt; 和 &lt;strong&gt;infinito&lt;/strong&gt; 即可，别的真的用处不大。&lt;strong&gt;Congiuntivo&lt;/strong&gt; 以及 &lt;strong&gt;condizionale&lt;/strong&gt; 的流利运用，在意大利人眼里都是有知识的象征，不会有人难为我们中国人的，死记硬背几个使用率的确特别频繁的就够了。有关这一点，其实意大利人自己都说虚拟式和条件式将从意大利语里灭绝。既然他们都不留恋，我们还有什么可怜惜的？ &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;意大利语发音最重要的不是音节、也不是单双辅音：是&lt;strong&gt;重音&lt;/strong&gt;！你甚至可以完全不清楚一个词是怎么写的、但只要你能掌握它的重音和知道它大概（即便是模模糊糊）的发音，意大利人就能听懂你说的话。所以想让意大利人听得懂，每次背诵单词、学动词都要养成&lt;strong&gt;把重音给标出来&lt;/strong&gt;的好习惯，并靠重音去听词、学词、背词。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;-&quot;&gt;总结&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;学好意大利语并不难，常用单词只有400多个，单词的读写很一致，而且说话严格按照语法来，所以语法很重要。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;掌握意大利语语法的关键是掌握动词，主要有：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Indicativo 里的 imperfetto, presente 和 futuro&lt;/li&gt;
&lt;li&gt;过去分词&lt;/li&gt;
&lt;li&gt;Gerundio&lt;/li&gt;
&lt;li&gt;Infinito&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;意大利语发音最重要的不是音节、也不是单双辅音：是重音。每次背诵单词、学动词都要养成把重音给标出来的好习惯，并靠重音去听词、学词、背词。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    <item>
      <title>Sunday</title>
      <link>http://cn.yuz.me/articles/09-March-2014/</link>
      <pubDate>Sun, 09 Mar 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/09-March-2014/</guid>
      <author></author>
      <description>&lt;p&gt;每个有效率的人，都应当拥有一个自己建立的系统，用来平衡自己的学习、工作、和生活，但又不固守在自己的系统里面。我以前，没有自己的系统，总是东一榔头、西一棒子，想到什么就做什么，有时候就会卡在一些无关自己未来的事情上，但是因为事情没有做完，心有不甘，就一直拖着，最后的结果是耽误了正事。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;一个系统，可以看成是一系列规则的集合。建立自己的系统有很多好处：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不需要大脑。不需要把脑细胞浪费在想下一步去干什么上面，因为什么时候做什么事情已经大致定好了。就好象电脑的操作系统可以让电脑按部就班的很好的完成任务一样，但其实电脑是没有“大脑”的。&lt;/li&gt;
&lt;li&gt;给自己约束。不是想到什么就做什么，而是有目标的，系统的在未来和现在，工作和生活中间，找到平衡。&lt;/li&gt;
&lt;li&gt;规律自己的生活。规律的生活对自己的健康有益。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当然，要在系统里面加入一些应对不确定因素的措施，还必须不断改变自己的系统以适应未来生活的变化。&lt;/p&gt;
&lt;p&gt;所以，从今天起，我要系统的生活，下面是我现阶段对自己生活的规划：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;工作&lt;ol&gt;
&lt;li&gt;每周工作日白天做毕业设计和学习意大利语。&lt;/li&gt;
&lt;li&gt;每周末至少一天时间复习会计和经济的考试。&lt;/li&gt;
&lt;li&gt;每周工作日晚上写博客。&lt;/li&gt;
&lt;li&gt;每周工作日晚上或者周末如果有时间，研究 Javascript, DOCPAD。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;运动&lt;ol&gt;
&lt;li&gt;每周二、四、六晚上跑步。&lt;/li&gt;
&lt;li&gt;每周六或周日打球。如果周六打球，周日便跑步。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    <item>
      <title>Wednesday</title>
      <link>http://cn.yuz.me/articles/05-March-2014/</link>
      <pubDate>Wed, 05 Mar 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/05-March-2014/</guid>
      <author></author>
      <description>&lt;p&gt;做事情的时候需要注意的问题：一、集中注意力做自己需要做的事情，不要受别的娱乐项目的干扰。二、学习要踏实，稳扎稳打，不要担心每天的进步太小，小到看不见，要对自己有信心。三、严肃对待生活每一分钟，要像备考一样紧张起来！&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Tuesday</title>
      <link>http://cn.yuz.me/articles/04-March-2014/</link>
      <pubDate>Tue, 04 Mar 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/04-March-2014/</guid>
      <author></author>
      <description>&lt;p&gt;从今天起，我要正式开始我的&lt;a href=&quot;http://it.yuz.me/&quot;&gt;意大利语博客&lt;/a&gt;和&lt;a href=&quot;http://pkm.yuz.me/&quot;&gt;个人知识管理博客&lt;/a&gt;了，这是我实施的大计划的一部分。我的计划之一是设计一种有效的学习方式，进行终身的学习。这种学习方式要求我把学习成果按时记录下来，一方面以博客的形式发布，一方面整理成为我的知识库便于以后查询。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Monday</title>
      <link>http://cn.yuz.me/articles/03-March-2014/</link>
      <pubDate>Mon, 03 Mar 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/03-March-2014/</guid>
      <author></author>
      <description>&lt;p&gt;昨天下午去打了网球，好久没有活动过了，感觉还挺不错的。今天都灵下了一整天的雨，我去了一趟超市，下午一觉睡了三个半小时，几乎什么也没有干，没什么可写的。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Sunday</title>
      <link>http://cn.yuz.me/articles/02-March-2014/</link>
      <pubDate>Sun, 02 Mar 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/02-March-2014/</guid>
      <author></author>
      <description>&lt;p&gt;昨天，我正式把自己的博客更名为：诗意栖居。原因是我想提醒自己：人当优雅的活着。一个人的行为不管在什么情况下都应当是从容与平和的。如果为了成功，为了名利，为了别人的眼光，总是板着脸，活得让自己，让别人都有压力，即使成功了，又能怎么样呢？当下的人、事、情、景才是最值得珍惜的，不是过去也不是未来。试着卸下沉重的包袱，为当下活得洒脱一点吧。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;强烈推荐萧秋水的文章&lt;a href=&quot;http://www.xiaoqiushui.com/archives/8535&quot;&gt;《你跟风你的，我坚持我的》&lt;/a&gt;，我觉得对于大多数的人来说，15年已然是一个奇迹了。我非常佩服作者的精神，希望可以像她一样，永远坚持不断的学习和写作。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Saturday</title>
      <link>http://cn.yuz.me/articles/01-March-2014/</link>
      <pubDate>Sat, 01 Mar 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/01-March-2014/</guid>
      <author></author>
      <description>&lt;p&gt;我最近这段时间最需要提高的是：&lt;strong&gt;早上起来先干正事的习惯&lt;/strong&gt;！早早的起来，洗脸、刷牙、吃早饭，然后全身心的投入到工作中去，不被外面的世界所打扰。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;今天我突然想到一个观点：“让自己的孩子努力学习，最好的方法是让他们尽早知道学习的重要性。尽早的处理家里的事务，参与家庭决策，打工，接触社会，培养独立意识”。我现在当然还没有孩子，但是希望以后用得上。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;下面分享一篇我认为非常好的文章，文章最后会有我的总结&lt;/p&gt;
&lt;h3 id=&quot;-&quot;&gt;《我的助理辞职了！》&lt;/h3&gt;
&lt;p&gt;当时公司招了大批应届本科和研究生毕业的新新人类。平均年龄25岁。那个新的助理，是经过多次面试后，我亲自招回来的一个女孩。名牌大学本科毕业，聪明，性格活泼。私下里我得承认，我招她的一个很重要的原因，除了她在大学里优秀的表现之外，&lt;strong&gt;还因为她写了一手漂亮的字&lt;/strong&gt;。女孩能写一手好字的不多，尤其像她，看起来长发飘飘，多么女性化的一个姑娘，一手字却写的铿锵倜傥，让我对她不由多了很多好感。 　　&lt;/p&gt;
&lt;p&gt;手把手的教。从工作流程到待人接物。她也学的快。很多工作一教就上手。一上手就熟练。跟各位同事也相处的颇融洽。我开始慢慢的给她一些协调的工作，各部门之间以及各分公司之间的业务联系和沟通让她尝试着去处理。 
　　 
开始经常出错。她很紧张，来找我谈。我告诉她：错了没关系，你且放心按照你的想法去做。遇到问题了，来问我，我会告诉你该怎么办。仍然错。又来找我，这次谈的比较深入，&lt;strong&gt;她的困惑是，为什么总是让她做这些琐碎的事情？&lt;/strong&gt;我当时问她：什么叫做不琐碎的工作呢？ &lt;/p&gt;
&lt;p&gt;她答不上来，想了半天，跟我说：我总觉得，&lt;strong&gt;我的能力不仅仅能做这些，我还能做一些更加重要的事情&lt;/strong&gt;。那次谈话，进行了1小时。我知道，我说的话，她没听进去多少。后来我说：“先把手头的工作做好，先避免常识性错误的发生。然后循序渐进罢。”&lt;/p&gt;
&lt;p&gt;半年以后，她来找我，第一次提出辞职。我推掉了约会，跟她谈辞职的问题。问起辞职的原因，她跟我直言：“本科四年，功课优秀，没想到毕业后找到了工作，却每天处理的都是些琐碎的事情。没有成就感。”我又问她：“你觉得，在你现在所有的工作中，最没有意义的最浪费你的时间精力的工作，是什么？”她马上答我：“帮您贴发票，然后报销，然后到财务去走流程，然后把现金拿回来给您。”&lt;/p&gt;
&lt;p&gt;我笑着问她：“你帮我贴发票报销有半年了吧？通过这件事儿，你总结出了一些什么信息？”&lt;/p&gt;
&lt;p&gt;她呆了半天，答我：“贴发票就是贴发票，只要财务上不出错，不就行了呗，能有什么信息？”&lt;/p&gt;
&lt;p&gt;我说，我来跟你讲讲，当年我的做法吧：“98年的时候，我从财务被调到了总经理办公室，担任总经理助理的工作。其中有一项工作，就是跟你现在做的一样，帮总经理报销他所有的票据。本来这个工作就像你你刚才说的，把票据贴好，然后完成财务上的流程，就可以了。”&lt;/p&gt;
&lt;p&gt;“其实&lt;strong&gt;票据是一种数据记录，它记录了和总经理乃至整个公司营运有关的费用情况&lt;/strong&gt;。看起来没有意义的一堆数据，其实它们涉及到了公司各方面的经营和运作。于是我&lt;strong&gt;建立了一个表格，将所有总经理在我这里报销的数据按照时间，数额，消费场所，联系人，电话等等记录下来&lt;/strong&gt;。”&lt;/p&gt;
&lt;p&gt;“我&lt;strong&gt;起初建立这个表格的目的很简单，我是想在财务上有据可循&lt;/strong&gt;，同时万一我的上司有情况来询问我的时候，我会有准确的数据告诉他。通过这样的一份数据统计，&lt;strong&gt;渐渐的我发现了一些上级在商务活动中的规律&lt;/strong&gt;，比如，哪一类的商务活动，经常在什么样的场合，费用预算大概是多少；总经理的公共关系常规和非常规的处理方式，等等。”&lt;/p&gt;
&lt;p&gt;“当我的上级发现，他&lt;strong&gt;布置工作给我的时候，我会处理的很妥贴&lt;/strong&gt;。&lt;strong&gt;有一些信息是他根本没有告诉我的，我也能及时准确的处理&lt;/strong&gt;。他问我为什么，我告诉了他我的工作方法和信息来源。”&lt;/p&gt;
&lt;p&gt;“渐渐的，他基于这种&lt;strong&gt;良性积累&lt;/strong&gt;，越来越多的交待更加重要的工作。再渐渐的，&lt;strong&gt;一种信任和默契就此产生&lt;/strong&gt;，我升职的时候，他说我是他用过的最好用的助理。”&lt;/p&gt;
&lt;p&gt;说完这些长篇大论，我看着这个姑娘，她愣愣的看着我。我跟她直言：“我觉得你最大的问题，是你没有用心。在看似简单不动脑子就能完成的工作里，你没有把你的心沉下去，所以，半年了，你觉得自己没有进步。她不出声，但是收回了辞职报告。”&lt;/p&gt;
&lt;p&gt;又坚持了3个月，她还是辞职了。这次我没有留她。让她走了。&lt;/p&gt;
&lt;p&gt;后来她经常在 MSN 上跟我聊天。告诉我她的新工作的情况。一年内，她换了三份工作。每一次都坚持不了多久。每一次她都说新的工作不是她想要的工作。后来，她又一次辞职了。很苦恼，跑来找我，要跟我吃饭。我请她去写字楼后面的商场吃日本料理。吃到中途，忽然跟我说：“我有些明白你以前说的话是什么意思了”。 &lt;/p&gt;
&lt;p&gt;所谓的职业生涯，&lt;strong&gt;其实你很难预测到你将来真正要从事什么工作&lt;/strong&gt;，将来所要从事的工作，是否跟你在大学里学的专业有关。大多数人，很有可能将来所作的工作，跟他当初所学的专业一点关系都没有。从22岁大学毕业在26岁之间这四年，&lt;strong&gt;重要的不是你做了什么，重要的是你在工作中养成了怎么样的良好的工作习惯&lt;/strong&gt;。这个&lt;strong&gt;良好的工作习惯&lt;/strong&gt;，指的是：&lt;strong&gt;认真，踏实的工作作风&lt;/strong&gt;，以及&lt;strong&gt;是否学会了如何用最快的时间接受新的事物&lt;/strong&gt;，&lt;strong&gt;发现新事物的内在规律&lt;/strong&gt;，&lt;strong&gt;比别人更短时间内掌握这些规律并且处理好它们&lt;/strong&gt;。具备了以上的要素，你就成长为一个被人&lt;strong&gt;信任&lt;/strong&gt;的员工。 &lt;/p&gt;
&lt;p&gt;人都有惰性，也都愿意用那些用起来顺手的人。&lt;strong&gt;当你具备了被人信任的基础，并且在日常的工作中逐渐表现出你的踏实，聪明和细致的时候，越来越多的工作机会就会提供到你面前&lt;/strong&gt;。原因很简单，&lt;strong&gt;用一句话就能交代清楚并且能被你顺利完成的工作，谁愿意说三句话甚至半小时交待一个怎么都不明白的人呢？&lt;/strong&gt;沟通也是一种成本，沟通的时间越少，内耗越少，这是作为管理者最清楚的一件事。 &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当你有比别人更多的工作机会去接触那些你没有接触过的工作的时候，你就有了比别人多的学习机会，人人都喜欢聪明勤奋的学生，作为管理者，大概更是如此。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一个新手，大多数新手，在这四年里，是看不出太大的差距的。但是这四年的经历，为以后的职业生涯的发展奠定的基础，是至关重要的。很多人不在乎年轻时走弯路，很多人觉得日常的工作人人都能做好没什么了不起。然而&lt;strong&gt;就是这些简单的工作，循序渐进的、隐约的，成为今后发展的分水岭&lt;/strong&gt;。 &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;漫不经心的对待基层工作的最大的损失，就是将看似简单的事物性处理方式，分界成为长远发展的能力问题。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;聪明的人，总是不认为自己的能力有问题。时间长了，他会抱怨自己运气不好，抱怨那些看起来资质普通的人，总能比自己更能走狗屎运。抱怨她容貌比自己好，或者他更会讨领导欢心，等等。慢慢的，影响心态。所谓的怀才不遇，有时是这种情况。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;工作需要一个聪明人，工作其实更需要一个踏实的人&lt;/strong&gt;。在聪明和踏实之间，我更愿意选择后者。而踏实，是人人都能做到的。和先天条件没有太大关系。&lt;/p&gt;
&lt;h3 id=&quot;-&quot;&gt;我的总结&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;踏实&lt;/strong&gt;、&lt;strong&gt;聪明&lt;/strong&gt;和&lt;strong&gt;细致&lt;/strong&gt;，这三点在工作中很重要。&lt;/li&gt;
&lt;li&gt;工作时应当&lt;strong&gt;勤奋&lt;/strong&gt;不偷懒。&lt;/li&gt;
&lt;li&gt;漫不经心的对待基层工作的最大的损失，就是将看似简单的事物性处理方式，分界成为&lt;strong&gt;长远发展&lt;/strong&gt;的能力问题。&lt;/li&gt;
&lt;li&gt;用最快的时间发现新事物的&lt;strong&gt;内在规律&lt;/strong&gt;，在比别人更短时间内掌握这些规律并且处理好新事物。&lt;/li&gt;
&lt;li&gt;建立&lt;strong&gt;个人的数据库&lt;/strong&gt;！把自己处理过的，思考过的事情记录下来，方便日后查询。尽量着眼于&lt;strong&gt;细节&lt;/strong&gt;而且不能怕辛苦！&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    <item>
      <title>Tuesday</title>
      <link>http://cn.yuz.me/articles/25-February-2014/</link>
      <pubDate>Tue, 25 Feb 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/25-February-2014/</guid>
      <author></author>
      <description>&lt;p&gt;今后应当如何应对考试之后懈怠的问题？我虽然不能立即说出一剂灵丹妙药，但是至少可以给出些许思路，阻止类似的问题再次发生。下面是我的一些想法：&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;我使用二月二十三日的文章给出的解决方案：先猜测可能的原因，然后一一解决。&lt;/p&gt;
&lt;p&gt;我懈怠的原因可能有：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不愿思考，精神懒惰，身体疲劳。&lt;/li&gt;
&lt;li&gt;没有压力和紧迫感。&lt;/li&gt;
&lt;li&gt;被一些其他无关紧要的事情分散注意力，比如：做网站，写博客。&lt;/li&gt;
&lt;li&gt;做事情不够专注，涉猎的东西太多，而且多不是精华，越看越累。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我尝试的解决方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在精神上要坚持不懈，默默告诉自己&lt;strong&gt;坚持一下&lt;/strong&gt;、再&lt;strong&gt;坚持一下&lt;/strong&gt;。在身体上，要保证&lt;strong&gt;良好作息时间&lt;/strong&gt;，&lt;strong&gt;保证睡眠&lt;/strong&gt;，&lt;strong&gt;保证三餐的营养&lt;/strong&gt;，&lt;strong&gt;多运动&lt;/strong&gt;，提高自己身体机能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;主动断绝家里面的支持&lt;/strong&gt;，切断自己的后路。用渴望成功的动力代替害怕失败的压力。&lt;strong&gt;积极主动面对困难&lt;/strong&gt;。每天给自己定&lt;strong&gt;特别具体&lt;/strong&gt;的完成目标。多读一些立志类的博客。&lt;/li&gt;
&lt;li&gt;这方面要&lt;strong&gt;适可而止&lt;/strong&gt;，不能一天只做一件事情，要在几件事情之间切换。摆在爱好之前的是自己必须做的事情。&lt;/li&gt;
&lt;li&gt;每天只做需要做的事情，有余力再看其他的东西，专注于精华的文章。&lt;strong&gt;切忌追求多而全&lt;/strong&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这些只是我暂时想到的，肯定还有一些没有想到的原因，我以后还要去思索，直到问题完全解决为止。下周，我要写一篇文章，总结一下一星期都做了什么事情，并且治疗&lt;strong&gt;懈怠病&lt;/strong&gt;的进展情况。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Monday</title>
      <link>http://cn.yuz.me/articles/24-February-2014/</link>
      <pubDate>Mon, 24 Feb 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/24-February-2014/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;strong&gt;个人知识管理&lt;/strong&gt;是一项一生的项目。我们只要活着，时时都在考试，处处都是考场。人生这场开卷考试，随你带任何小抄，比得是应变力和理解力，比得是细致细心，&lt;strong&gt;做足准备&lt;/strong&gt;。你走的越远，考的就越难，准备的有多充分，决定了一个人能走多远。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;人的大脑有一个特点，就是比较擅长记忆抽象的东西，如一幅图片或一段旋律，而具象的东西，比如一串数字，就不如让电脑代劳，省心省力。现在的电子产品越做越小，网络也越来越发达，利用电脑与网络，做一个个人网上数据库绝对不是什么困难的事情。唯一一项需要克服的难题，就是一个人的耐心。整理数据库需要一个人坚持不懈的努力，需要十年如一日的热情，这是技术根本无法触及到的难题。&lt;/p&gt;
&lt;p&gt;个人知识数据库需要满足如下的要求：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;方便检索。随便搜索一个关键字，立刻就能够找到需要的知识。&lt;/li&gt;
&lt;li&gt;随时在身边。一个图书馆竖在那里对你的价值，还不如一只装在口袋里的笔记本。&lt;/li&gt;
&lt;li&gt;可以在任何系统里面阅读，并且不需要安装额外的软件。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以，我的解决方法是：修改一个不错的 Static Site Generator，用它来满足我的要求。&lt;/p&gt;
&lt;p&gt;我对于这个 Static Site Generator 的要求是这样的：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;完美支持 Markdown 语法，包括 footnotes 等。&lt;/li&gt;
&lt;li&gt;使用 Javascript 写成，因为我要深入学习这门语言。&lt;/li&gt;
&lt;li&gt;支持 Categories 和 Tags 分类。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我可以使用 Git 把我每次的修改历史记录下来，使用 Github 和 Dropbox 进行二次备份。可以用 OS X 里面的搜索功能进行文章搜索，我还可以发布到网上，让 Google 收录，使用 Google 来搜索我需要的内容。我还可以直接提取 Markdown 文件，输出成为 PDF 文档打印出来或者显示在 iPad 上面。这样我就拥有了一个漂亮的个人资料库了。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Sunday</title>
      <link>http://cn.yuz.me/articles/23-February-2014/</link>
      <pubDate>Sun, 23 Feb 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/23-February-2014/</guid>
      <author></author>
      <description>&lt;p&gt;每当遇到问题，我是这样去解决的：首先，&lt;strong&gt;永远不要期望得到一个完美的答案&lt;/strong&gt;。其次，&lt;strong&gt;猜测问题的原因都有什么&lt;/strong&gt;，在纸上逐条仔细的列出。之后，&lt;strong&gt;一一对应每个原因，写出可行的解决方法&lt;/strong&gt;。如果写不出，那么深挖下去，看看这个原因背后更深层的原因是什么，对应该原因，写出解决方案。最后，&lt;strong&gt;实践这些方案&lt;/strong&gt;，如果解决方法行不通，很有可能是造成问题的原因猜错了，那么重新列出新的原因，进行下一轮的循环，直到问题解决为止。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Saturday</title>
      <link>http://cn.yuz.me/articles/22-February-2014/</link>
      <pubDate>Sat, 22 Feb 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/22-February-2014/</guid>
      <author></author>
      <description>&lt;p&gt;今天什么也没做，因为昨天刚刚考完 Economics。全身就像泄了气的皮球，怎么也鼓不起来。睡觉、打游戏伴随了我一整天。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Friday</title>
      <link>http://cn.yuz.me/articles/21-February-2014/</link>
      <pubDate>Fri, 21 Feb 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/21-February-2014/</guid>
      <author></author>
      <description>&lt;p&gt;回顾自己做网站的历史，要追溯到高中时代，那个时候，个人博客刚刚热起来，有个个人空间，就像有个自己的小房子，可以在上面涂涂抹抹，还可以让别人看到，对我来说吸引力非常大。&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我一开始接触的是 &lt;a href=&quot;http://en.wikipedia.org/wiki/Windows_Live_Spaces&quot;&gt;Windows Live Spaces&lt;/a&gt;（那时候可能还没有新浪博客），自己申请一个帐号，往里面添加各种模块，可以显示文字，图片和视频，非常方便。我同学就有一个这样的博客，名字叫“木桶小队”，我至今还记得上面一句来自我的外教 David Quentin Dauthier 的话：“写作能够使你了解自己。”这句话也是我写作的其中一个原因。&lt;/p&gt;
&lt;p&gt;后来又出现了Google 的 Blogger 等博客平台，但是出现没有多久就被墙了。自从国内把 Blog 翻译成博客以后，新浪，搜狐，凤凰网都有自己的博客平台，我也曾经注册过新浪博客，但是从来也没有坚持下来，原因是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;广告太多。各种小广告、浮动窗口，层出不穷，让你感觉像进了火车站。&lt;/li&gt;
&lt;li&gt;博客外观单一。所有的博客结构和样式都差不多，千篇一律，而且不能添加和修改自己想要的模块，非常不自由。&lt;/li&gt;
&lt;li&gt;有被删贴的风险。自己的博客被人监视，不能畅所欲言。&lt;/li&gt;
&lt;li&gt;没有办法添加个性域名。名称不好记，而且永远受制于一家公司，一旦该公司停止了服务，你就永远失去了这个网站入口。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;刚上本科的时候，宿舍里面还没有网，没事的时候跑到网吧上网，我就在查怎么建立自己的网站，后来自然就找到了 Wordpress，但是什么 DNS, Domain name, SQL, php，对我来说都是从来没有听说过的东西，建立自己的网站简直是天方夜谭。后来渐渐知道了这些知识，就开始用 Wordpress 建立自己的网站。曾经注册过好多域名：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://yuzijie-is.me&quot;&gt;http://yuzijie-is.me&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stillyaroma.com&quot;&gt;http://stillyaroma.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://yuzj.net&quot;&gt;http://yuzj.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://yzj.name&quot;&gt;http://yzj.name&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;等等等等。但是现在都废弃了。可能是因为 Wordpress 太自由和强大，我把太多时间都花在怎么布置博客，研究各种插件怎么使用和主题美化上面了，虽然对 html 和 css 倒是懂的更多了，可是却还是迟迟没有真正去写博客。&lt;/p&gt;
&lt;p&gt;这几年接触了 Static Site Generator，知道了 &lt;a href=&quot;http://pages.github.com/&quot;&gt;Github.io&lt;/a&gt;，使用 Git 来发布自己的网站，感觉更方便，而且也不用太担心网站优化等什么与写作无关的事情了。每天一段话的博客模式渐渐成熟，我的博客渐渐步入正轨。&lt;/p&gt;
&lt;p&gt;我之所以要和个人网站纠缠这么多年，是希望自己有一个反思的平台，督促我不断努力，也希望能够开辟一块自己的天地，在上面尽情发挥自己的想象力，让自己的大脑永远充满活力！&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Thursday</title>
      <link>http://cn.yuz.me/articles/20-February-2014/</link>
      <pubDate>Thu, 20 Feb 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/20-February-2014/</guid>
      <author></author>
      <description>&lt;p&gt;再谈自信：自信的真正含义我认为是&lt;strong&gt;对自己身份的认同&lt;/strong&gt;。从这个定义来看，世界上便没有真正不自信的人了。那些所谓不自信的人其实是把自己的身份或者说水平低估了，而且&lt;strong&gt;自信&lt;/strong&gt;自己身份或者水平是低的。&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;这低估来源于对自己的不了解。又有多少人真正了解自己呢？只有随着阅历的不断增多，反思的不断深入，人们才能慢慢的了解自己。我同意人活着就应该有自信！换一句话来说，就是人活着应当相信自己身份和水平是高的！先相信自己的水平高，然后在做事的时候以高标准要求自己，把漂亮的做好一件事当作是理所应当，如果失败了也不要灰心丧气，而是心里想，这件事失败了并不能代表你的能力不行，只不过是你的身体与你的定位相融合时的一个必经的过程而已。这样，你的生活就会走上良性的循环。如果你现在还是一个“屌丝”，那么请你想想，你心中对你的定位是什么呢？你平时是按照精英的行为标准来做事的吗？&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;从今天起，我的博客正式更名为：&lt;strong&gt;每天一段话&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Wednesday</title>
      <link>http://cn.yuz.me/articles/19-February-2014/</link>
      <pubDate>Wed, 19 Feb 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/19-February-2014/</guid>
      <author></author>
      <description>&lt;p&gt;人生是一场长跑，比得是毅力和坚持，一场胜利不能决定你的未来。时刻保持居安思危的心态，让生活中处处留有余地。知足才是最大的富有，学会放下的难度要远远高于学会争取的难度，但是懂得放下的人要比不懂的人更加安全！&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Tuesday</title>
      <link>http://cn.yuz.me/articles/18-February-2014/</link>
      <pubDate>Tue, 18 Feb 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/18-February-2014/</guid>
      <author></author>
      <description>&lt;p&gt;做事的时候，应当要注意保持自信的心态。什么是自信的心态？举个例子，当你学习一门课的时候，你要主动的认为，里面讲的所有的知识理应被你通晓；当你完成一项工作的时候，你也要主动认为，这项工作理应被很好的完成。在主动的提高了自己的定位之后，把漂亮的完成与定位相符的工作当作理所当然，把自身与自身的定位自然的统一在一起，便是一种自信的心态。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;今天去参加工作面试，工作是一个 ICT 公司的网络管理员。回答问题的时候，发现自己好多的基础知识都不熟悉（比如 Subnet Mask），真需要好好补一补。此外，面试的经理说，Subnet Mask 执行的是“或”操作，正确的应该是“与”操作，他说错了。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Monday</title>
      <link>http://cn.yuz.me/articles/17-February-2014/</link>
      <pubDate>Mon, 17 Feb 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/17-February-2014/</guid>
      <author></author>
      <description>&lt;blockquote&gt;
&lt;p&gt;“Only one who devotes himself to a cause with his whole strength and soul can be a true master. For this reason mastery demands all of a person.” - Albert Einstein&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在一个信息爆炸的时代里，人们被鼓励接收更多的知识。一开始我总是渴望看更多资料，学更多东西。但是我越来越发现，我所学到的知识大多都是肤浅的，这些信息更大的作用却是浪费时间，这些时间本可以用来深入钻研一件事情。深入了解一个知识给我带来的好处远大于肤浅的知道好多常识给我带来的好处。没有公司会雇一个只会说不会做的万金油。从今以后，你要管理自己的注意力，尽量减少自己分心的时间，多把时间放在当下最需要学好的事情上，等这件事学得很深入了以后，再切换到下一件事情上。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Sunday</title>
      <link>http://cn.yuz.me/articles/16-February-2014/</link>
      <pubDate>Sun, 16 Feb 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/16-February-2014/</guid>
      <author></author>
      <description>&lt;p&gt;今天我几乎什么也没做，既没有学习，也没有干我自己喜欢的事情。主要原因是内心太浮躁，刚刚完成两场考试又替别人写了安卓程序，突然卸下了巨大的压力后，一想到要干正事就本能的抗拒，不是睡觉，就是玩游戏。颓废不是解决问题的办法，错误不能永远这样重复，振作精神，收拾收拾自己的情绪，继续前行。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;另外，发现好多原来点击量非常高的博客，最近一段时间都没有怎么更新了（比如李笑来和刘未鹏的博客），是实在没有时间写吗？是当初的激情已经退去了？还是觉得没有什么可写得了？&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Saturday</title>
      <link>http://cn.yuz.me/articles/15-February-2014/</link>
      <pubDate>Sat, 15 Feb 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/15-February-2014/</guid>
      <author></author>
      <description>&lt;p&gt;今天是我坚持写&lt;strong&gt;每天一句话&lt;/strong&gt;的第七天，完成了一个星期的轮回。&lt;/p&gt;
&lt;p&gt;是生活把我一步一步的逼到了底线，由最初的写长篇大论为目标，“沦落”到了每天一句话，最后定型于每天一句话。现在看来，这种形式却最适合我，不占用很多时间，且目标简单更容易坚持。可见，简单的东西，最有持久的生命力，比如：细菌比大象适应能力更强。说到我为什么要做这样的一个博客，我觉得用下面的推销员的故事来形容最为恰当，里面小锤的一击就好比是每天的一句话。&lt;/p&gt;
&lt;h2 id=&quot;-&quot;&gt;最伟大的推销员乔·吉拉德别开生面的演讲&lt;/h2&gt;
&lt;p&gt;世界上最伟大的推销员乔·吉拉德，在他即将结束自己的推销生涯时，受邀做一次演讲，讲述他成为推销大王的秘密。&lt;/p&gt;
&lt;p&gt;那天的现场座无虚席，人们都在热切、焦急地等待着。当舞台上的幕布徐徐拉开，人们惊奇地发现舞台中央吊着一个巨大的铁球。正纳闷间，只见一位老者在人们热烈的欢呼声中走到铁球旁边。人们都诧异地望着他，不知道他要做什么。正在这时走上来两位工作人员，他们抬着一个大铁锤，放在舞台上。老人说道：“请两位身强力壮的年轻人到台上来。”好多壮汉站起来，早有两名动作快的跑上台去。老人请他们俩用大铁锤敲打吊着的铁球，直到让它晃动起来。&lt;/p&gt;
&lt;p&gt;一个年轻人想也没想，迫不及待地拉开架势，抡起铁锤，奋力向那吊着的铁球砸去。只听见刺耳的一声巨响，但是铁球却一动不动。台下的加油声震天响，他接二连三地猛砸，铁球纹丝不动，而他却气喘吁吁，只好认输了。另一个年轻人看着不服气，接过大铁锤把铁球砸得当当响，但很快同样败下阵来，摇摇头走下了舞台。&lt;/p&gt;
&lt;p&gt;台下的呐喊声渐渐消失了，人们认定这个铁球是不可能被撼动的。这时，老人从上衣口袋里拿出一把小小的铁锤，然后认真地，对着那个巨大的铁球“咚”地敲了一下，然后停顿一下，再继续用小锤“咚”地敲一下。人们都瞪大了眼睛，不知道这位著名的推销员想干什么，而这位老人反复地做着这个动作，在那里不停地敲击着铁球。&lt;/p&gt;
&lt;p&gt;就这样，十分钟过去了，二十分钟过去了，台下的观众慢慢失去了耐心，开始骚动起来，有人甚至开始咒骂乔·吉拉德是在耽搁大家的时间。乔·吉拉德并不理会，依然一小锤一小锤地工作着，他好像根本就没听到人们在抱怨什么。大多数观众愤愤地离去了，留下的人们似乎也喊累了。&lt;/p&gt;
&lt;p&gt;就在乔·吉拉德进行到四十分钟的时候，坐在前排的一个妇女突然尖叫起来：“看哪，球动了！”会场刹那间鸦雀无声，人们都聚精会神地看着那个铁球，果然，那巨大的铁球开始以很小的幅度晃动起来。老人没有受到任何影响，继续站在那里一小锤一小锤地敲着。就这样，大铁球终于在老人的努力下越荡越高，它带动着铁链子发出“咣咣”的声音，它的巨大威力强烈地震撼着在场的每一个人。会场上顿时爆发出一阵阵热烈的掌声。在掌声中，老人把小锤装进上衣口袋，转过身来，对大家说了一句话：“在成长的路上，你没有耐心等待成功的到来，那么你只好用一生的耐心去面对失败。”&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;最后，分享另一个故事，这是我昨天在微信里面看到的。&lt;/p&gt;
&lt;h2 id=&quot;-50-&quot;&gt;真实记录十四个孩子的50年不同人生！&lt;/h2&gt;
&lt;p&gt;英国有部很了不起的纪录片，一个导演可能初衷是想验证在英国社会阶级是很难逾越的，富人的孩子依然是富人，穷人的孩子依然是穷人，选择了14个不同阶层的孩子进行跟踪拍摄，每七年记录一次，从7岁开始，14岁，21岁，28岁，35岁，42岁，49岁，一直到去年的56岁，几十年过去，还是那个导演，从青年到老年，还是那群人，从儿童步入老年。&lt;/p&gt;
&lt;p&gt;我听说这片子有一年之多，因为是完全的真人秀，所以相当好奇，但是一直没有找到片源，终于在搜狐视频见到这片子，2012年他们也完成了56岁的拍摄，所以这最新的一部片名字叫做《56UP》，一共分三集，在这150分钟里，我们可以窥见到普通的英国人的人生。&lt;/p&gt;
&lt;p&gt;那些人的人生好像证实了导演最初的推测，遗憾地是，真的证明了，就像天涯前不久一个很火热的帖子《寒门再难出贵子》，一群毕业生在银行实习后各自不同的表现和最终归宿，让人无法言语但却就是残酷的现实，优良的社会资源早已经按照既定格局被瓜分殆尽，从父母辈一直承传到子女辈。而这部英国真人秀电视纪录片也是让人看了唏嘘不已，里面没有分析具体原因，我们只能通过那些表象去推断本质的原因。&lt;/p&gt;
&lt;p&gt;7岁的孩子大部分都天真浪漫，上层阶级读私立学校的小孩Andrew和JOHN已经每天在看《金融报》或者《观察家》了，他们明确知道自己会上哪个高级中学然后上牛津大学然后成为著名律师著名人物之类，中产阶级的男孩也有一些梦想反对种族歧视帮助有色人种或者到哪里上学读书有个什么职业，女孩子则想着长大了嫁人生子，而在穷人区贫民窟上寄宿学校的下层阶级的孩子甚至谈不上什么梦想，有人希望当驯马师赚钱，有人希望能有机会见到自己的爸爸吃饱饭少罚站少被打这也成为了他们的愿望。&lt;/p&gt;
&lt;p&gt;在他们56岁的时候，当年那几个7岁的上私立学校的孩子已经按照既定路线上了牛津大学毕业然后都做了著名律师，过着上层社会的优渥生活，受人尊重家庭幸福，他们的孩子也无一例外地走着父亲的老路，好中学好大学好工作；中产阶级的男孩子有三个也上了大学，第一个bruce牛津大学数学系毕业后成为了一个中学教师，按照他的理想帮助穷困地区的学生，后来回到英国在一个普通的公立学校教书，过着平淡也还安静的生活；另外一农家子弟nick上牛津物理系毕业后到美国成为一个美国著名大学的教授，第二次婚姻中娶了一个身材外貌气质极佳的美国妻子，他是这里面唯一一个成功晋级精英阶级的人；一个男孩peter年轻的时候政治思绪很激烈英姿勃发，大学毕业后做了教师，中途因为发表政治言论被民众抨击退出了有压力的电影拍摄，56岁时候重回拍摄，已经改行做了公务员，家庭稳定幸福儿女双全且优秀，和自己的美丽妻子业余时间一起创办乐队进行创作表演并在业内取得很不错的成绩，身材修长气质优雅，他们依然稳定地处在在中产阶级这个梯度里。不过那些中产阶级出来的女孩子则表现都很平淡，我甚至都不能准确地分出谁的故事，无一例外她们嫁人结婚生孩子，她们的人生幸福程度几乎与她们的婚姻美满程度完全挂钩。而那几个来自底层社会阶级的孩子，有色人种居多，他们年老以后，都当了一堆孩子的爷爷奶奶，而他们的孩子，极少能上到大学，做着都是普通的服务性工作，修理工保安之类，他们自己，常与失业相伴，如果没有好的社会制度，他们其实处境堪忧。&lt;/p&gt;
&lt;p&gt;我们中国古话说，龙生龙，凤生凤，老鼠的儿子会打洞，主要说的是遗传和潜移默化，大概也表达了不同物种之间这难以逾越的某种界规吧。除了结论真的让人感叹甚至让人有些不甘以外，我还明显地发现了以下值得感兴趣的几点。&lt;/p&gt;
&lt;p&gt;一、一个人的体重与他的社会阶级是对应的。
在片中，精英阶级的andrew和john老到56岁依然还保持相对不错的体型和身材，原中产阶级中美国教授nick夫妻晋升为精英阶级，公务员peter夫妻作为中层里面的佼佼者，体型明显较好，有几个甚至说得上修长精干；而底层阶级长大变老的男人们，几乎都成了胖子秃子，虽然他们年轻的时候有几个甚至说得上相当英俊帅气，尤其是她们的妻子，每个体型都是走形得相当厉害。而这些底层阶级父母生的孩子们，人数众多，绝大部分都是肥胖的，虽然现在他们还只有20来岁。&lt;/p&gt;
&lt;p&gt;可见，精英阶级从身形锻炼饮食控制等方面的修行，远远强于底层阶级，这种能保持自己体重的毅力，是不是也是他们成功的重要特质?人人都只看到了他们与生俱来的优越的家庭教育资源和社会环境，除了更好的生活品质和生活习惯，其实在体型的背后更是他们的家庭赋予的某种自律自强的精神吧，这点其实很值得我们深思。所以现在有人说，你连自己的体重都控制不了，你连冬天早晨起床都起不了，你如何能有毅力去控制人生呢？我们看到的只是身材，然而身材的背后映射的是更多内容，因此我们对那些能长年保持自己体型的人，那些坚持不懈朝着自己目标奋进的人，由衷地表达自己的敬意，在背后，他们的付出或许是我们所不能设想的。&lt;/p&gt;
&lt;p&gt;二、除了母体的家庭环境，性格是重塑人生的最重要的一张牌。
诚然，前面有说，绝大部分人基本都没跳出社会的等级的既定魔咒，但还是也有例外的。举两个例子，任何人都会注意到有个叫neil的中产阶级的孩子（他有个小学同班同学是电影中的考上牛津数学系的bruce），neil在在7岁的镜头里他非常灿烂地叙述着他不着天际的奇异的剑客或者花朵蝴蝶飞之类的梦想，甚至14岁的镜头下也是一背着书包骑着自行车在好教区飞速而过的阳光灿烂少年，在考牛津大学失利而进入一别的大学之后，因为精神有了问题，他辍学之后做了建筑工人，然后流浪辗转在英国各地，居无定所，食不果腹，衣衫褴褛，实在让人看了相当心酸。虽然最后在56岁的时候以反转的姿态做了某个地区的议员，但依然是个贫苦的拿着救济金的议员，他平时所打的零工比如做教堂的辅助祭司也仅仅能让他活着，他对着镜头从来都没有过高的奢望，说不知道他自己能做的是什么，还有什么样他可以做下去赚到钱的更好职业，他骨子里已经对自己的命运无可奈何了。片子一直没说他的精神问题是他的天生遗传问题还是后来因为家庭环境压迫所致，总之，这个人物看了让人相当悲凉。如果他性情没有问题，他大学毕业后本来是可以顺利走在中产阶级有尊严的轨道上的。&lt;/p&gt;
&lt;p&gt;还有一个孩子，生活在贫民窟，住在寄宿学校里，7岁时候出现的那张悲凉的脸让我很难忘怀，他叫paul。他7岁时候谈不上什么梦想不过就是希望少被打，少被罚站之类。他的忧伤无助的小脸在1964年的黑白镜头下让人心痛。他成年后虽然也找了很多工作，但是因为无一技之长，也无足够的毅力坚持，或者也因为就业环境不佳，他频繁地失业，换工作，到晚年的时候已经只能在妻子帮工的养老院谋得一份小小的修理工的杂差。他到底是因为家庭环境而造成的自卑，还是因为天生性格本身而造成的少毅力？不得而知，总而言之，他小时候的那张脸让人怜悯并心里发冷，因为这都可能只是与他的童年生长环境密切相关。&lt;/p&gt;
&lt;p&gt;三、婚姻可以拯救一个人，尤其是女人。
在电影中，女人的幸福主要与情感与婚姻有关，事业在里面的比重很小。中产阶级里面有三个同班同学，在多个年代一起肩并肩出现在镜头里，长大以后的命运差别还是很远。有个叫Sue乐观的女孩第一次离婚后坚强带着孩子，后来再婚幸福夫妻关系很和谐，然后工作也一路顺利并且有显著提升，家庭美满事业顺利，总之人生更为幸福；有个女孩子一生中嫁了两次离婚两次，留下几个孩子，每个孩子都没上大学，只做着低微的工作，她身体不好又遭遇到一系列的家庭不幸，一直失业领着救济金经济也很拮据；还有一个女孩子本性是个悲观的人，她在7岁14岁和21岁的时候是一个很忧伤很反叛的女孩，而在28岁的时候遇到了她的丈夫，从此她变成了一个阳光的人，在56岁的时候坦然地说出：虽然自己是一本也许不怎么好看的书，别人（观众）既然翻开了，但是还是会有惯性一直读下去。&lt;/p&gt;
&lt;p&gt;婚姻是女人的第二次生命，这话放在女权主义那里不好说对与错，但是放在这个电影里再合适不过了。那些在7岁的时候就兴高采烈地说要结婚要几个孩子的女人，在她们的人生道路上都写下了这些篇章，只是个中滋味大相径庭。婚姻甚至重塑了她们的第二次生命。那个苏在这些女人中显得相当年轻有活力，无论容貌还是精神在这群女人中都是佼佼者，再婚遇到的让她幸福的男人，和一路向上的事业也给了她极大的信心，当然也创造了较好的物质环境吧。而其中有个女人在56岁的时候衰老得惊人，家庭一般又遭遇失业，岁月在她的脸上无情地刻下深深的痕迹。&lt;/p&gt;
&lt;p&gt;父母的糟糕的婚姻会伤害一个孩子，给他们人生留下很不好的印记，但其实好的婚姻也可以拯救一个男人，比如上段中写的那个7岁就脸呈忧伤之色让人心痛的白人贫民男孩paul，小时候因为父母离婚一直说不会结婚不考虑这事情，后来去了澳洲，看起来很英俊，长大到28岁以后幸运遇到一个阳光的女人，这女人支撑他走过了后面的几十年的岁月。虽然他遇到问题的时候无一例外地想逃避，想消失，但是最后他的妻子用自己的方式固定了他，也许是孩子，也许是温暖，让他留在这个完整的家庭里继续尽责。如果没有这个妻子的话，这个从来就一脸悲凉的对人生无望恐惧的孩子又被伤害了自尊心又没有自信的男人不知道晚景会如何地悲凉也很难预测。而他的女儿终于也考上大学主修英国历史，一家人重回英国游览的时候也很让人感叹。&lt;/p&gt;
&lt;p&gt;四、一个家庭中孩子数量的的多少确实与生活品质大有关系。
在电影中，精英阶级的人基本只生个两个孩子，在优生优养子女之外有更多的时间来享受自己的人生进行自己的理想规划，比如喜爱园艺、带领板球队、组建乐队等，他们的孩子都按部就班地上中学大学、毕业以后也有很不错的体面高薪的工作。而底层阶级的那些长大后很容易生个三五个孩子，两段婚姻甚至更多，因为他们在很年轻的时候就因为冲动无序而导致孩子们更无序地出生，甚至他们年轻的儿子在也很年轻甚至不到二十岁的时候也会生了三五个孩子。因此他们还未到衰老的时候甚至只有49岁就已经是一大堆小孩的爷爷奶奶了，经济压力可想而知，他们的生活质量也是可想而知，电影中他们被一大家子围着忙忙碌碌，一刻不得闲，有白人也有有色人，他们在五十六岁时候为自己的儿女辈找到了一个体面的工作比如邮递员而感到很欣慰，如果偶尔家族出现了一个大学生，则更是满面荣光。按照推测，他的子女应该基本是我们所说的80后。&lt;/p&gt;
&lt;p&gt;那些结婚的人基本都是找的是门当户对阶级的人，这很正常，一个人在自己所属的阶级里有更广泛的人群交集和价值共鸣，里面精英阶级和上层的中产阶级在婚姻上倒是更为稳定，是因为理性的选择还是物质的保证？而其他很多人在35——42岁左右的时候经历了离婚再婚的过程。当然，一段失败的婚姻会让人生更为不幸，除了让人对婚姻的某种信念散失而让人觉得沮丧，更是因为修正上一段错误需要花更长的时间和精力，如果上端婚姻又留下一堆要负责的孩子而爸爸们也都不知道去了哪里的话，这生活更是雪上加霜。&lt;/p&gt;
&lt;p&gt;所以，理性的人是更容易具有幸福生活，井然有序，一切都在掌握中？还是感性的人更容易有幸福生活，走到哪里算哪里，随心所欲？或者，表面上的有序看起来乏味无趣，但是在有序之中却有游刃的空间，而表面上自由随心却带来后续的混乱，最终是否能拥有自由和惬意却是未知。所以这个让我们深思，我们羡慕的不仅仅是精英阶级表面上所拥有的更为丰厚的物质基础和社会资源，或者更要研究他们能拥有并保持传承这种实力的潜在的那种特质。&lt;/p&gt;
&lt;p&gt;从42岁的时候开始，他们的生活基本已经没有了什么变化，人生的一切似乎已经成为了定局，孩子们已经长大再教育已经来不及，而自己年华老去追求事业和爱情都已经力不从心，那些曾经意气风发剑指江湖的有志少年也变成了今日平静祥和的头发稀少的中老年男人，那些曾经愤世嫉俗的女孩也成为现在淡淡评阅自己人生的中年娴静妇女。在这个年纪，人生的大好时光已经过去，回首过去，他们都很惊讶自己小时候的模样，他们仿佛都基本满意如今的人生，只是不满意又能如何？他们不会对着镜头后悔的。虽然，电影中，那是在英国的福利性的保障制度下，那些人生活还能得到很有效的保障。在我们的国家和我们现在这样的保障体系下，如果我们在年轻的时候也都知道了未来的我们是什么样的人过着什么样的生活，我们是否更充满信心还是会觉得沮丧?
或许就像剧中人所说，无论我们自己是怎么样的一本书，精彩或者乏味，读着读着，也就读下去了；或者就像局中人所说，而所谓幸福，就是我们都还在平稳地在这里，没有遭遇到厄运，这也是一种幸福；或者就像剧中人说说，如果有机会重来，会在年轻的时候好好读书，因为知识是谁也拿不走的，那样可以更有力掌控人生；或者如剧中人所说，如果能重新来过，一定不会像当年那么懒，会很努力工作把握每一次机会，那么还是会有很多机会改变整个人生。&lt;/p&gt;
&lt;p&gt;如果，如果，不过人生没有如果，在这个知天命的年龄，一切都已经成为定局。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Friday</title>
      <link>http://cn.yuz.me/articles/14-February-2014/</link>
      <pubDate>Fri, 14 Feb 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/14-February-2014/</guid>
      <author></author>
      <description>&lt;p&gt;真正聪明的人不是懂得何时开始，而是懂得何时结束；不是懂得如何做加法，而是懂得如何做减法，去掉80%，留下20%。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Thursday</title>
      <link>http://cn.yuz.me/articles/13-February-2014/</link>
      <pubDate>Thu, 13 Feb 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/13-February-2014/</guid>
      <author></author>
      <description>&lt;p&gt;大部分的教育过分的重视了“证明”，却忽略了比证明更重要的东西——“原因”。——选自《&lt;a href=&quot;http://www.yinwang.org/blog-cn/2013/04/26/reason-and-proof/&quot;&gt;原因与证明&lt;/a&gt;》&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;下面是我对王垠这篇文章的摘抄&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;证明与原因的区别，就像是犯罪的证据与它的原因的区别。证据并不是导致犯罪的原因。有了证据可以帮助你把罪犯绳之以法，可是如果你找不到他犯罪的原因，你就没法防止同样的犯罪现象再次发生。&lt;/p&gt;
&lt;p&gt;原因往往比证明来得更加简单，更加深刻，但却更难发现。对于一个事实往往有多种多样的证明，然而导致这个事实的原因却往往只有一个。如果你只知道证明却不知道原因，那你往往就被囚禁于别人制造的理论里面，无法自拔。你能证明一个事物具有某种特性，然而你却没有能力改变它。你无法对它加入新的，好的特性，也无法去掉一个不好的特性。你也无法发明新的理论。有能力发明新的事物和理论的人，他们往往不仅知道&lt;strong&gt;证明&lt;/strong&gt;，而且知道&lt;strong&gt;原因&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    <item>
      <title>Wednesday</title>
      <link>http://cn.yuz.me/articles/12-February-2014/</link>
      <pubDate>Wed, 12 Feb 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/12-February-2014/</guid>
      <author></author>
      <description>&lt;p&gt;用实用不实用来衡量知识优劣，是无知的人对于知识赤裸裸的歧视。用这个标准来决定是不是要去学习这些知识的人，只能用目光短浅，故步自封来形容（这里面包括我自己）。也许有一天，故步自封的人会发现，那些不实用的知识，恰恰是走向终点的捷径。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Tuesday</title>
      <link>http://cn.yuz.me/articles/11-February-2014/</link>
      <pubDate>Tue, 11 Feb 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/11-February-2014/</guid>
      <author></author>
      <description>&lt;p&gt;今天偶然发现了&lt;a href=&quot;http://www.yinwang.org/&quot;&gt;王垠的博客&lt;/a&gt;，感觉非常的亲切。从他的文章内容，可以确定就是那个当年退学的王垠的博客。回想7年之前，是他关于 Linux 的文章，让我开始对这个未知的系统产生了浓厚的兴趣，从而一发不可收拾。同时他也把软件编程带入了我的视野，虽然我现在仍然不是程序员，但是对于编程的兴趣却没有减少，甚至这个网站的诞生以及后来自己独立编写的 Android 软件，也和我对编程的兴趣不无关系。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;王垠对我在计算机方面的影响是巨大的，他当年鼓吹 Tex 的文章曾使我花了很大力气来研究 LaTex，以至于后来我和我室友的本科毕业论文都是用 LaTex 来完成的。当年他对 Donald Knuth 的赞美，以及 TAOCP 的宣传仿佛还历历在目。但是转眼过了十年，王垠的变化让我刮目相看。随着他的知识的增长，阅历的增加，他对于很多事情的看法简直是翻天覆地！在他的文章里，少了很多盲目崇拜，多了许多思考和批判，但是不变的是他犀利的语言和独立的思维。看完以后让人不得不大呼过瘾。下面是几段精彩的摘抄，来自他的文章&lt;a href=&quot;http://www.yinwang.org/blog-cn/2014/01/04/authority/&quot;&gt;《我和权威的故事》&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TeX 其实也是异常糟糕的设计。它过度的复杂，很少有人搞得懂怎么配置。经常为了一个简单的效果折腾很久，然后不久就忘了当时怎么做的，回头来又得重新折腾。原因就是因为 TeX 的设计缺乏一致性，特殊情况太多，而且组合（compose）能力很差。所以你需要学太多东西，而不是跟象棋一样只需要学习几个非常简单的规则，然后把它们组合起来形成无穷的变化。&lt;/p&gt;
&lt;p&gt;Knuth 的作品里面有他的贡献和价值，TeX 的排版算法（而不是语言）也许仍然是不错的东西。可是如果因为这些好东西爱屋及乌，而把他所推崇的那些乱七八糟的设计当成神圣的话，那你自己的设计就逃脱不出同样的思维模式，让简单的事情变得复杂。仍然对 TeX 顶礼膜拜的人应该看一下 TeXmacs，看看它的作者是如何默默无闻的，彻彻底底的超越了 TeX 和 Knuth。&lt;/p&gt;
&lt;p&gt;我跟 Knuth 的最后一次“联系”是在我就要离开清华的时候。我从 email 告诉他我觉得中国的研究环境太浮躁了，不是做学问的好地方，想求点建议。结果他回纸信说：“可我为什么看到中国学者做出那么多杰出的研究？计算机科学不是每个人都可以做的。如果你试了这么久还不行，那说明你注定不是干这行的料。”还好，我从来没有相信他的这段话，我下定了决心要证明这是错的。多年的努力还真没有白费，今天我可以放心的说，Knuth 你错了，因为我已经在你引以为豪的多个方面超过了你。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    <item>
      <title>Monday</title>
      <link>http://cn.yuz.me/articles/10-February-2014/</link>
      <pubDate>Mon, 10 Feb 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/10-February-2014/</guid>
      <author></author>
      <description>&lt;p&gt;一个心智成熟的人是很少愁眉苦脸的，他们总是微笑的面对所有问题。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;对于我来说，每天洗袜子是件艰难的事情，所以要养成洗袜子的习惯，于我需要很大的自制力。对于习惯洗袜子的人来说，每天洗袜子或者不洗，这件事对他们的影响不大，也就无法体会我的艰难（当然，养成习惯之后，我也无法体会当初的艰难了）。同理，你认为理所应当的事情，别人也许会觉得很艰难，至少最初会很艰难。当遇到这种情况的时候，你要尽量体谅别人的感受，不要把理所应当作为皮鞭，去抽打别人。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Sunday</title>
      <link>http://cn.yuz.me/articles/09-February-2014/</link>
      <pubDate>Sun, 09 Feb 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/09-February-2014/</guid>
      <author></author>
      <description>&lt;p&gt;如果一个人总是把持着正确不放，他就永远无法和自己最亲近的人快乐的生活。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Friday</title>
      <link>http://cn.yuz.me/articles/24-January-2014/</link>
      <pubDate>Fri, 24 Jan 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/24-January-2014/</guid>
      <author></author>
      <description>&lt;p&gt;先谈生存，再谈理想：1. 保证身体健康；2. 尽快找到实习。从现在起为生存而战！&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Thursday</title>
      <link>http://cn.yuz.me/articles/23-January-2014/</link>
      <pubDate>Thu, 23 Jan 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/23-January-2014/</guid>
      <author></author>
      <description>&lt;p&gt;对于我来说拖延症的又一个原因：不自觉的把所做的事情和别人比较，因为害怕比不过别人而自卑，所以刻意逃避不去做。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Wednesday</title>
      <link>http://cn.yuz.me/articles/22-January-2014/</link>
      <pubDate>Wed, 22 Jan 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/22-January-2014/</guid>
      <author></author>
      <description>&lt;p&gt;迅速果断处理眼前的问题，积极答复别人的留言，不拖沓，不回避，是优秀的人共通的特质。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Danger is real but fear is a choice.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;成为优秀的人，第一步是习惯在没有做事之前，不去幻想结果的好坏。硬着头皮冲上去，走好自己应当走的每一步。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Tuesday</title>
      <link>http://cn.yuz.me/articles/21-January-2014/</link>
      <pubDate>Tue, 21 Jan 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/21-January-2014/</guid>
      <author></author>
      <description>&lt;p&gt;是时候从骨子里改变自己了！先从拖延症入手，做一个说到做到的人。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;拖延症的原因：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不敢面对现实，不敢正视自己的缺点&lt;/li&gt;
&lt;li&gt;害怕失败，对未来无法掌控的不确定性产生恐惧&lt;/li&gt;
&lt;li&gt;惧怕改变，怕失去现有的东西&lt;/li&gt;
&lt;li&gt;脸皮薄，怕被人说，有负罪感&lt;/li&gt;
&lt;li&gt;怕麻烦&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    <item>
      <title>Thursday</title>
      <link>http://cn.yuz.me/articles/09-January-2014/</link>
      <pubDate>Thu, 09 Jan 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/09-January-2014/</guid>
      <author></author>
      <description>&lt;p&gt;写日记能让人诚实的面对自己，每天过得怎么样一目了然。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;今天上午会计课，下午一直在家整理自己的网站。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Wednesday</title>
      <link>http://cn.yuz.me/articles/08-January-2014/</link>
      <pubDate>Wed, 08 Jan 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/08-January-2014/</guid>
      <author></author>
      <description>&lt;p&gt;实验室待了一下午，学习使用 &lt;a href=&quot;http://mercurial.selenic.com/&quot;&gt;Mercurial&lt;/a&gt;，虽然和毕设没有直接关系，不过写代码没有这个软件我还真是不踏实。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;把 Git repository 放在 Dropbox 里面备份，有了 Github 和 Dropbox 的双重保护，再也不怕数据丢失了。Git 可以精确的记录你的修改历史，这方面比 Dropbox 要先进。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Tuesday</title>
      <link>http://cn.yuz.me/articles/07-January-2014/</link>
      <pubDate>Tue, 07 Jan 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/07-January-2014/</guid>
      <author></author>
      <description>&lt;p&gt;不得不承认，在我平淡的一天过后，要写出一句话来总结都很困难。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Monday</title>
      <link>http://cn.yuz.me/articles/06-January-2014/</link>
      <pubDate>Mon, 06 Jan 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/06-January-2014/</guid>
      <author></author>
      <description>&lt;p&gt;今天去了都灵附近的打折村 &lt;a href=&quot;http://www.mcarthurglen.com/it/serravalle-designer-outlet/en/&quot;&gt;SERRAVALLE DESIGNER OUTLET&lt;/a&gt;，买了两双鞋，一件毛衣。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Sunday</title>
      <link>http://cn.yuz.me/articles/05-January-2014/</link>
      <pubDate>Sun, 05 Jan 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/05-January-2014/</guid>
      <author></author>
      <description>&lt;p&gt;从今天开始，每天坚持写一句话的日记，只写一句话！&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;写日记是一项需要极大耐心的工作。能够坚持下来不间断的，很多都是了不起的人物，比如胡适和蒋介石。我尝试坚持过很多次，但是都没能成功。所以，今天决定，每天只写一句话！从写作到发布，只需要的不到几分钟的时间就可以完成。不积跬步无以至千里，虽然每天只有一句话，但是时间长了，也会有收获。希望自己能够坚持下来啊！&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Saturday</title>
      <link>http://cn.yuz.me/articles/04-January-2014/</link>
      <pubDate>Sat, 04 Jan 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/04-January-2014/</guid>
      <author></author>
      <description>&lt;p&gt;爱，包括耐心的帮助另一半变得更好。&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;人时刻都在改变，如果若干年后，TA 变得和当初不一样了，你还会喜欢 TA吗？&lt;/li&gt;
&lt;li&gt;爱一个人不应该只爱 TA 现在的样子，而应当无条件的去爱 TA 的灵魂。&lt;/li&gt;
&lt;li&gt;可以尝试去改变 TA，这并不代表你不喜欢这个人了，只能代表你不喜欢 TA 现在的样子。&lt;/li&gt;
&lt;li&gt;不喜欢就是不爱吗？好的父母也会不喜欢自己的孩子的某些缺点，但是他们永远和孩子们站在一起，督促他们去改变。&lt;/li&gt;
&lt;li&gt;所以，爱也包括帮助对方变得更好。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Friday</title>
      <link>http://cn.yuz.me/articles/03-January-2014/</link>
      <pubDate>Fri, 03 Jan 2014 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://cn.yuz.me/articles/03-January-2014/</guid>
      <author></author>
      <description>&lt;p&gt;如果让蔬菜套在塑料袋里放进冰箱，袋子里的湿气跑不出去，菜容易烂在里面。&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>